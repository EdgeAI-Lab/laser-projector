/*GPIO_ResetBits(GPIOB,GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15);
		GPIO_ResetBits(GPIOC,GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9);
		GPIO_ResetBits(GPIOD,GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11 | GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15);
		
		HAL_Delay(100);
		
		
		GPIO_SetBits(GPIOB,GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15);
		GPIO_SetBits(GPIOC,GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9);
		GPIO_SetBits(GPIOD,GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11 | GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15);
		

		HAL_Delay(100);*/
		
		//printf("\n\rUSART Printf Example: retarget the C library printf function to the USART\n\r");
		

		//while(USART_GetFlagStatus(USART2,USART_FLAG_TXE)==RESET);
		
		
		
		// uint8_t *cs = NULL; uint16_t b = 0x1234; cs = (uint8_t *)&b; cs[0]: 0x34 cs[1]: 0x12
		//printf("cs[0]: 0x%x\n",cs[0]);
		//printf("cs[1]: 0x%x\n",cs[1]);